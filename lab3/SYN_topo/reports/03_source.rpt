#################################################################################
# Design Compiler MCMM Scenarios Setup File Reference
# Script: dc.mcmm.scenarios.tcl
# Version: M-2016.12-SP4 (July 17, 2017)
# Copyright (C) 2011-2017 Synopsys, Inc. All rights reserved.
#################################################################################
#################################################################################
# This is an example of the MCMM scenarios setup file for Design Compiler.
# Please note that this file will not work as given and must be edited for your
# design.
#
# Create this file for each design in your MCMM flow and configure the filename
# with the value of the ${DCRM_MCMM_SCENARIOS_SETUP_FILE} in
# rm_setup/dc_setup_filenames.tcl
#
# It is recommended to use a minimum set of worst case setup scenarios
# and a worst case leakage scenario in Design Compiler.
# Further refinement to optimize across all possible scenarios is recommended
# to be done in IC Compiler.
#################################################################################
#################################################################################
# Additional Notes
#################################################################################
#
# In MCMM, good leakage and dynamic power optimization results can be obtained by
# using a worst case leakage scenario along with scenario-independent clock gating
# (compile_ultra -gate_clock).
#
# A recommended scenario naming convention (used by Lynx) is the following:
#
# <MM_TYPE>.<OC_TYPE>.<RC_TYPE>
#
# MM_TYPE - Label that identifies the operating mode or set of timing constraints
#           Example values: mode_norm, mode_slow, mode_test
#
# OC_TYPE - Label that identifies the library operating conditions or PVT corner
#           Example values: OC_WC, OC_BC, OC_TYP, OC_LEAK, OC_TEMPINV
#
# RC_TYPE - Label that identifies an extraction corner (TLUPlus files)
#           Example values: RC_MAX_1, RC_MIN_1, RC_TYP
#################################################################################
# Define additional setup scenarios here as needed, using the same format.
#################################################################################
# Worst Case Setup Scenario
#################################################################################
set scenario mode_norm.OC_rvt_ss0p95v125c
mode_norm.OC_rvt_ss0p95v125c
create_scenario ${scenario}
Warning: Discarding all scenario specific information previously defined in this session. (UID-1008)
Current scenario is: mode_norm.OC_rvt_ss0p95v125c
1
# Read in scenario-specific constraints file
puts "RM-Info: Sourcing script file [which [dcrm_mcmm_filename ${DCRM_CONSTRAINTS_INPUT_FILE} ${scenario}]]\n"
RM-Info: Sourcing script file /home/capstone6/capstone/lab3/SYN_topo/mcmm_cons/TOP.constraints.mode_norm.OC_rvt_ss0p95v125c.tcl

source -echo -verbose [dcrm_mcmm_filename ${DCRM_CONSTRAINTS_INPUT_FILE} ${scenario}]
# The unit of time in this library is 1ns 
# The unit of capacitance in this library is 1pF 
# reset_design
## Clock Basics
create_clock -period 5 -name MAIN_CLOCK [get_ports CLK]
1
set_clock_latency 0.1 [get_clocks MAIN_CLOCK] 
1
set_clock_uncertainty 0.5  [get_clocks MAIN_CLOCK]
1
set_clock_transition 0.1 [get_clocks MAIN_CLOCK]
1
## In/Out
set INPUTPORT [remove_from_collection [all_inputs] [get_ports "CLK RESETn"]]
{a[3] a[2] a[1] a[0] b[3] b[2] b[1] b[0]}
set OUTPUTPORT [all_outputs]
{y[7] y[6] y[5] y[4] y[3] y[2] y[1] y[0]}
set_input_delay -clock MAIN_CLOCK -max 0.4 $INPUTPORT
1
set_output_delay -clock MAIN_CLOCK -max 0.3 $OUTPUTPORT
1
## Area Constraint
set_max_area 0
1
## ENVIRONMENTAL ATTRIBUTES 
# set_driving_cell -lib_cell PBIDIR_18_18_NT_DR -library io_gppr_cmos28lpp_t18_ss_0p950v_1p650v_125c -no_design_rule [all_inputs]
# set_load [load_of io_gppr_cmos28lpp_t18_ss_0p950v_1p650v_125c/PBIDIR_18_18_NT_DR/A] [all_outputs]
set REFLIB saed32rvt_ss0p95v125c
saed32rvt_ss0p95v125c
set BUFFER "NBUFFX2_RVT"
NBUFFX2_RVT
set BUF_IN_PIN "A"
A
set BUF_OUT_PIN "Y"
Y
#set_load [expr 2 * [load_of $REFLIB/$BUFFER/$BUF_IN_PIN]] $OUTPUTPORT
set_load [load_of $REFLIB/$BUFFER/$BUF_IN_PIN] $OUTPUTPORT
1
set_driving_cell -library $REFLIB -lib_cell $BUFFER -pin $BUF_OUT_PIN -no_design_rule $INPUTPORT
1
# set_driving_cell -lib_cell PBIDIR_18_18_NT_DR -library io_gppr_cmos28lpp_t18_ss_0p950v_1p650v_125c -no_design_rule [all_inputs]
# set_load [load_of io_gppr_cmos28lpp_t18_ss_0p950v_1p650v_125c/PBIDIR_18_18_NT_DR/A] [all_outputs]
#set_wire_load_mode "top"
#set auto_wire_load_selection false
#set_wire_load_model -name zero-wire-load-model
##ETC ATTRIBUTES
#set_max_fanout 200 [all_inputs]
#set_max_transition 1.5 [current_design]
#set_max_capacitance 150 [current_design]
# pin name of sub module was changed so dont touch
# set_dont_touch UTOP/Ufifo
# set_dont_touch UTOP/Umemory_wrapper
# We usually don't know the external capaciatnce 
# so insert buffers to isolate and protect inner logics
set_isolate_ports $OUTPUTPORT
1
set_ideal_network [get_ports "CLK RESETn"]
1
# no through pass assign syntax => insert buffers
set_fix_multiple_port_nets -all -buffer_constants -feedthroughs -constants
1
1
# puts "RM-Info: Reading SDC file [which [dcrm_mcmm_filename ${DCRM_SDC_INPUT_FILE} ${scenario}]]\n"
# constraint syntax is not based on SDC style.... so at first, just source and do read_sdc after write_sdc
# read_sdc [dcrm_mcmm_filename ${DCRM_SDC_INPUT_FILE} ${scenario}]
# set_operating_conditions -max_library <OC_WC_LIB_NAME> -max <OC_WC>
# set_operating_conditions ss_0p900v_125c -library sc9_cmos28lpp_base_rvt_ss_nominal_max_0p900v_125c_sadhm -analysis_type on_chip_variation
set_operating_conditions ss0p95v125c -library saed32rvt_ss0p95v125c -analysis_type on_chip_variation
Using operating conditions 'ss0p95v125c' found in library 'saed32rvt_ss0p95v125c'.
1
# OCV variation from voltage IR-drop 3.6%
set_timing_derate -early 0.964
1
# set_tlu_plus_files -max_tluplus <OC_WC_TLUPLUS_MAX_FILE> -tech2itf_map ${MAP_FILE}
set_tlu_plus_files -max_tluplus $TLUPLUS_MAX_FILE -min_tluplus $TLUPLUS_MIN_FILE -tech2itf_map ${MAP_FILE}
1
check_tlu_plus_files

Sanity check for TLU+ vs MW-Tech files:
 mapping_file: /data/SYNOPSYS/lib/32nm/SAED32_EDK/tech/star_rcxt/saed32nm_tf_itf_tluplus.map
 number of unique tlu+ files in mcmm mode: 2
  /data/SYNOPSYS/lib/32nm/SAED32_EDK/tech/star_rcxt/saed32nm_1p9m_Cmax.tluplus
  /data/SYNOPSYS/lib/32nm/SAED32_EDK/tech/star_rcxt/saed32nm_1p9m_Cmin.tluplus

--------- Sanity Check on TLUPlus Files -------------
1. Checking the conducting layer names in ITF and mapping file ... 
[ Passed! ]
2. Checking the via layer names in ITF and mapping file ... 
[ Passed! ]
3. Checking the consistency of Min Width and Min Spacing between MW-tech and ITF ... 
[ Passed! ]
----------------- Check Ends ------------------
1
# Include scenario specific SAIF file, if possible, for power analysis.
# Otherwise, the default toggle rate of 0.1 will be used for propagating
# switching activity.
read_saif -auto_map_names -input ../SIM/FUNCTION/${DESIGN_NAME}.saif -instance TB_${DESIGN_NAME}/U${DESIGN_NAME} -verbose
Error: Cannot find the SAIF file (../SIM/FUNCTION/TOP.saif). (PWR-201)
0
# Set options for worst case setup scenario
set_scenario_options -setup true -hold false -leakage_power true  -dynamic_power true
1
report_scenario_options
 
****************************************
Report : scenario_options
Design : TOP
Scenario(s): mode_norm.OC_rvt_ss0p95v125c
Version: O-2018.06-SP4
Date   : Wed Oct 26 12:36:48 2022
****************************************

Scenario: mode_norm.OC_rvt_ss0p95v125c is active.
 setup         : true 
 hold          : false 
 leakage_power : true 
 dynamic_power : true 

 cts_mode      : false 
 cts_corner    : none 

1
write_sdc -nosplit ${RESULTS_DIR}/[dcrm_mcmm_filename ${DCRM_FINAL_SDC_OUTPUT_FILE} ${scenario}]
1
### Define additional setup scenarios here as needed, using the same format.
###################################################################################
### Worst Case Setup Scenario
###################################################################################
set scenario mode_norm.OC_rvt_ff1p16vn40c
mode_norm.OC_rvt_ff1p16vn40c
create_scenario ${scenario}
Current scenario is: mode_norm.OC_rvt_ff1p16vn40c
1
# Read in scenario-specific constraints file
puts "RM-Info: Sourcing script file [which [dcrm_mcmm_filename ${DCRM_CONSTRAINTS_INPUT_FILE} ${scenario}]]\n"
RM-Info: Sourcing script file /home/capstone6/capstone/lab3/SYN_topo/mcmm_cons/TOP.constraints.mode_norm.OC_rvt_ff1p16vn40c.tcl

source -echo -verbose [dcrm_mcmm_filename ${DCRM_CONSTRAINTS_INPUT_FILE} ${scenario}]
# The unit of time in this library is 1ns 
# The unit of capacitance in this library is 1pF 
# reset_design
## Clock Basics
create_clock -period 5 -name MAIN_CLOCK [get_ports CLK]
1
set_clock_latency 0.1 [get_clocks MAIN_CLOCK] 
1
set_clock_uncertainty 0.5  [get_clocks MAIN_CLOCK]
1
set_clock_transition 0.1 [get_clocks MAIN_CLOCK]
1
## In/Out
set INPUTPORT [remove_from_collection [all_inputs] [get_ports "CLK RESETn"]]
{a[3] a[2] a[1] a[0] b[3] b[2] b[1] b[0]}
set OUTPUTPORT [all_outputs]
{y[7] y[6] y[5] y[4] y[3] y[2] y[1] y[0]}
set_input_delay -clock MAIN_CLOCK -max 0.4 $INPUTPORT
1
set_output_delay -clock MAIN_CLOCK -max 0.3 $OUTPUTPORT
1
## Area Constraint
set_max_area 0
1
## ENVIRONMENTAL ATTRIBUTES 
# set_driving_cell -lib_cell PBIDIR_18_18_NT_DR -library io_gppr_cmos28lpp_t18_ss_0p950v_1p650v_125c -no_design_rule [all_inputs]
# set_load [load_of io_gppr_cmos28lpp_t18_ss_0p950v_1p650v_125c/PBIDIR_18_18_NT_DR/A] [all_outputs]
set REFLIB saed32rvt_ff1p16vn40c
saed32rvt_ff1p16vn40c
set BUFFER "NBUFFX2_RVT"
NBUFFX2_RVT
set BUF_IN_PIN "A"
A
set BUF_OUT_PIN "Y"
Y
#set_load [expr 2 * [load_of $REFLIB/$BUFFER/$BUF_IN_PIN]] $OUTPUTPORT
set_load [load_of $REFLIB/$BUFFER/$BUF_IN_PIN] $OUTPUTPORT
1
set_driving_cell -library $REFLIB -lib_cell $BUFFER -pin $BUF_OUT_PIN -no_design_rule $INPUTPORT
1
# set_driving_cell -lib_cell PBIDIR_18_18_NT_DR -library io_gppr_cmos28lpp_t18_ss_0p950v_1p650v_125c -no_design_rule [all_inputs]
# set_load [load_of io_gppr_cmos28lpp_t18_ss_0p950v_1p650v_125c/PBIDIR_18_18_NT_DR/A] [all_outputs]
#set_wire_load_mode "top"
#set auto_wire_load_selection false
#set_wire_load_model -name zero-wire-load-model
##ETC ATTRIBUTES
#set_max_fanout 200 [all_inputs]
#set_max_transition 1.5 [current_design]
#set_max_capacitance 150 [current_design]
# pin name of sub module was changed so dont touch
# set_dont_touch UTOP/Ufifo
# set_dont_touch UTOP/Umemory_wrapper
# We usually don't know the external capaciatnce 
# so insert buffers to isolate and protect inner logics
set_isolate_ports $OUTPUTPORT
1
set_ideal_network [get_ports "CLK RESETn"]
1
# no through pass assign syntax => insert buffers
set_fix_multiple_port_nets -all -buffer_constants -feedthroughs -constants
1
1
#puts "RM-Info: Reading SDC file [which [dcrm_mcmm_filename ${DCRM_SDC_INPUT_FILE} ${scenario}]]\n"
#constraint syntax is not based on SDC style.... so at first, just source and do read_sdc after write_sdc
#read_sdc [dcrm_mcmm_filename ${DCRM_SDC_INPUT_FILE} ${scenario}]
#set_operating_conditions -max_library <OC_WC_LIB_NAME> -max <OC_WC>
#set_operating_conditions ff_1p100v_m40c -library sc9_cmos28lpp_base_rvt_ff_nominal_min_1p100v_m40c_sadhm -analysis_type on_chip_variation
set_operating_conditions ff1p16vn40c -library saed32rvt_ff1p16vn40c -analysis_type on_chip_variation
Using operating conditions 'ff1p16vn40c' found in library 'saed32rvt_ff1p16vn40c'.
1
# OCV variation from voltage IR-drop 3.6%
set_timing_derate -late 1.036
1
#set_tlu_plus_files -max_tluplus <OC_WC_TLUPLUS_MAX_FILE> -tech2itf_map ${MAP_FILE}
set_tlu_plus_files -max_tluplus $TLUPLUS_MAX_FILE -min_tluplus $TLUPLUS_MIN_FILE -tech2itf_map ${MAP_FILE}
1
check_tlu_plus_files

Sanity check for TLU+ vs MW-Tech files:
 mapping_file: /data/SYNOPSYS/lib/32nm/SAED32_EDK/tech/star_rcxt/saed32nm_tf_itf_tluplus.map
 number of unique tlu+ files in mcmm mode: 2
  /data/SYNOPSYS/lib/32nm/SAED32_EDK/tech/star_rcxt/saed32nm_1p9m_Cmax.tluplus
  /data/SYNOPSYS/lib/32nm/SAED32_EDK/tech/star_rcxt/saed32nm_1p9m_Cmin.tluplus

--------- Sanity Check on TLUPlus Files -------------
1. Checking the conducting layer names in ITF and mapping file ... 
[ Passed! ]
2. Checking the via layer names in ITF and mapping file ... 
[ Passed! ]
3. Checking the consistency of Min Width and Min Spacing between MW-tech and ITF ... 
[ Passed! ]
----------------- Check Ends ------------------
1
# Include scenario specific SAIF file, if possible, for power analysis.
# Otherwise, the default toggle rate of 0.1 will be used for propagating
# switching activity.
read_saif -auto_map_names -input ../SIM/FUNCTION/${DESIGN_NAME}.saif -instance TB_${DESIGN_NAME}/U${DESIGN_NAME} -verbose
Error: Cannot find the SAIF file (../SIM/FUNCTION/TOP.saif). (PWR-201)
0
# Set options for worst case setup scenario
set_scenario_options -setup true -hold false -leakage_power true  -dynamic_power true
1
report_scenario_options
 
****************************************
Report : scenario_options
Design : TOP
Scenario(s): mode_norm.OC_rvt_ff1p16vn40c
Version: O-2018.06-SP4
Date   : Wed Oct 26 12:36:49 2022
****************************************

Scenario: mode_norm.OC_rvt_ff1p16vn40c is active.
 setup         : true 
 hold          : false 
 leakage_power : true 
 dynamic_power : true 

 cts_mode      : false 
 cts_corner    : none 

1
write_sdc -nosplit ${RESULTS_DIR}/[dcrm_mcmm_filename ${DCRM_FINAL_SDC_OUTPUT_FILE} ${scenario}]
1
1
